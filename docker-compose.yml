services:
  # discovery-service ---------------------------
  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8761/actuator/health']

  # configuration-service ---------------------------
  configuration-service:
    build: ./configuration-service
    container_name: configuration-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9999/actuator/health' ]
    depends_on:
      - discovery-service

  # gateway-service ---------------------------
  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
      - CONFIG_SERVER=http://configuration-service:9999
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8888/actuator/health' ]
    depends_on:
      discovery-service:
        condition: service_healthy

  # postgres-keycloak-db ---------------------------
  postgres-keycloak-db:
    image: postgres
    container_name: postgres-keycloak-db
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
      test: "exit 0"

  # pgadmin-keycloak ---------------------------
  pgadmin-keycloak:
    image: dpage/pgadmin4
    container_name: pgadmin-keycloak
    restart: always
    ports:
      - "44:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_keycloak_data:/var/lib/pgadmin

  # keycloak-service ---------------------------
  keycloak-service:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-service
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak-db:5432/keycloak_db
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    command:
      - start-dev
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    depends_on:
      - postgres-keycloak-db

  # mysql-customer-db --------------------------
  mysql-customer-db:
    image: mariadb:10.6
    container_name: mysql-customer-db
    ports:
      - '3306:3306'
    restart: always
    volumes:
      - mysql_customer_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: customer-db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]

  # phpmyadmin-customer --------------------------
  phpmyadmin-customer:
    image: phpmyadmin
    container_name: phpmyadmin-customer
    restart: always
    ports:
      - '81:80'
    environment:
      PMA_HOST: mysql-customer-db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1

  # customer-service ---------------------------
  customer-service:
    build: ./customer-service
    container_name: customer-service
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
      - CONFIG_SERVER=http://configuration-service:9999
      - DB_URL=jdbc:mysql://mysql-customer-db:3306/customer-db?createDatabaseIfNotExist=true
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - ISSUER_URI=http://localhost:8080/realms/bank-ms-realm
      - JWK_SET_URI=http://keycloak-service:8080/realms/bank-ms-realm/protocol/openid-connect/certs
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8081/actuator/health' ]
    depends_on:
      - configuration-service
      - mysql-customer-db
      - keycloak-service

  # mysql-account-db --------------------------
  mysql-account-db:
    image: mariadb:10.6
    container_name: mysql-account-db
    restart: always
    ports:
      - '3307:3306'
    volumes:
      - mysql_account_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: account-db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]

  # phpmyadmin-account --------------------------
  phpmyadmin-account:
    image: phpmyadmin
    container_name: phpmyadmin-account
    restart: always
    ports:
      - '82:80'
    environment:
      PMA_HOST: mysql-account-db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1

  # account-service ---------------------------
  account-service:
    build: ./account-service
    container_name: account-service
    ports:
      - '8082:8082'
    expose:
      - '8082'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
      - CONFIG_SERVER=http://configuration-service:9999
      - DB_URL=jdbc:mysql://mysql-account-db:3306/account-db?createDatabaseIfNotExist=true
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - ISSUER_URI=http://localhost:8080/realms/bank-ms-realm
      - JWK_SET_URI=http://keycloak-service:8080/realms/bank-ms-realm/protocol/openid-connect/certs
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8082/actuator/health' ]
    depends_on:
      - customer-service
      - mysql-account-db
      - keycloak-service

  # account-service ---------------------------
  bank-angular:
    build: ./bank-angular
    container_name: bank-angular
    ports:
      - '8083:80'
    expose:
      - '8083'
    restart: always

volumes:
  mysql_customer_data:
  mysql_account_data:
  postgres_keycloak_data:
  pgadmin_keycloak_data:
